<?php declare(strict_types=1);
/*
 * This file is part of php-cypher-dsl.
 *
 * Copyright (C) Wikibase Solutions
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace WikibaseSolutions\CypherDSL\Traits;

/**
 * Used for automatically generating names.
 *
 * @internal This trait is not covered by the backwards compatibility guarantee of php-cypher-dsl
 */
trait NameGenerationTrait
{
    /**
     * Generates a unique random identifier.
     *
     * It is not entirely guaranteed that this function gives a truly unique string. However, because the
     * number of possible strings is so huge, it should not be a problem. The returned string will consist of
     * $length (default: 32) hexadecimal digits, prepended with $prefix. Since the prefix is predetermined, it does
     * not count towards the entropy of the returned string. Therefore, given the default length of 32, the change
     * of any two strings generated by this function being the same is 1 / 16^32, or about 1 / 3.4 * 10^38.
     *
     * @note The returned string is not cryptographically secure.
     *
     * @param string $prefix The prefix to put before the name. Must start with a letter to adhere to cypher namings
     * @param int    $length the length of the generated name in bytes (optional)
     */
    private function generateIdentifier(string $prefix = 'var', int $length = 32): string
    {
        $random = '';

        for ($i = 0; $i < $length; ++$i) {
            $random .= dechex(mt_rand(0, 15));
        }

        return $prefix . $random;
    }
}
